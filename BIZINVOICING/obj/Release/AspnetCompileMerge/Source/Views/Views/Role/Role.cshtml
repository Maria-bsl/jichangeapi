
@{
    ViewBag.Title = "Role";
    Layout = "~/Views/Shared/_Invoice_layout.cshtml";
}



<script type="text/javascript">
    var delet, edit;
    $(document).ready(function () {
        //  Getnum();
        getaccess();
        GetCurrency();
        $("#btnSubmit").click(function () {
            opType = jQuery("#hdnEmployee").val();
            var message = validateEmployeecur();
            if (message.length > 0 && opType != 'D') {
                notifyMessage(message, 'danger');
            }
            else {
                if (opType == 'C') {
                    var x = confirm("Are you sure you want to save?");
                    if (x) {
                        addcur();
                    }
                } else {
                    var x = confirm("Are you sure you want to Update?");
                    if (x) {
                        addcur();
                    }
                }
            }
        })

        $("#btnDelete").click(function () {
            delcurrrency();
        });
    });
</script>

<script type="text/javascript">
    var glob;
    var sid;
    
    function GetCurrency() {
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("GetRolesAct", "Role")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {

                jQuery("#tbl-smtp tbody").empty();
                if (jQuery.fn.DataTable.isDataTable("#tbl-smtp")) {
                    jQuery('#tbl-smtp').DataTable().clear().destroy();
                }
                if (data != 0) {
                    var i = 1;
                    jQuery.each(data, function (key, value) {
                        var del = delet == true ? '<button class="btn btn-outline-dark btn-sm" data-sid="' + value.Sno + '" data-pwd="' + value.Description + '"  id="btnDelete" data-rec="0" onclick="delcurrrency(this)"><i class="fas fa-trash" aria-hidden="true"></i></button>' : '';
                        var updta = edit == true ? '<button class="btn btn-outline-secondary btn-sm" data-toggle="modal" data-target="#modal-currency" id="btn' + value.Sno + '" data-sid="' + value.Sno + '"  value="Edit" onclick="showcurrencyModal(this)"><i class="fas fa-pen" ></i ></button >' : '';
                        var row = '<tr>' +
                            '<td>' + i + '</td>' +
                            '<td class="d-none">' + value.Code + '</td>' +
                            '<td>' + value.Description + '</td>' +
                            '<td>' + value.Status + '</td>' +
                            '<td class="d-none">' + value.Inst_reg + '</td>' +
                            '<td class="px-2">' + updta + ' ' + del + '</td>' +
                            '</tr>';
                        i++;
                        jQuery("#tbl-smtp tbody").append(row);
                    });
                }
                applyDatatable('tbl-smtp');

            }
        })
    }

    function delcurrrency(e) {
        var x = confirm("Are you sure you want to delete?");
        if (x) {
            jQuery('#hdnEmployee').val('D');
            cid = jQuery(e).data('sid');
            sid = jQuery(e).data('pwd');
            deleteCurrency(cid, sid);
            return true;
        }
        else
            return false;

    }

    function addcur() {
        type = '',
            opType = jQuery("#hdnEmployee").val();
        var params = JSON.stringify(getCurrencyValues());

        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("AddRoles", "Role")',
            data: params,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                hideModal('modal-currency');

                if (opType == 'C') {
                    if (data != 0) {

                        message = ' Role Already Exists.';
                        type = 'danger';
                    }
                    else {
                        message = ' Role Successfully Created.';
                        type = 'success';

                    }
                }
                else if (opType == 'U') {

                    var jk = true;
                    if (data == false && jk == true) {
                        message = jQuery("#txtname").val() + ' Role Already Exists.';
                        type = 'danger';
                    }
                    else {
                        message = jQuery("#txtname").val() + ' Role Successfully updated.';
                        type = 'success';

                    }
                }
                notifyMessage(message, type);
                GetCurrency();
            }
        })


    }

    function deleteCurrency(cid, pwd) {
        //var message = validateEmployeecur(),
        //var message = '',
        type = '',
            opType = jQuery("#hdnEmployee").val();


        var params = JSON.stringify(getcurrencyID(cid, pwd));

        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteRole", "Role")',
            data: params,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                hideModal('modal-currency');
                if (data == "exist") {
                    message = pwd + ' Role is in Use, Cannot be Deleted';
                    type = 'danger';
                }
                else {
                    message = data + ' Role Successfully Deleted.';
                    type = 'success';

                }
                notifyMessage(message, type);
                GetCurrency();
            }
        })

    }
</script>

<div class="card-body">
    <h5 class="card-title" id="lblage">@ViewData["arol"]</h5>

    <div class="form-group d-flex">
        <button type="button" id="btnAdd" value="Add" data-sid="0"
                class="btn ml-auto mr-1 btn-sm btn-success btn-biz_logic" onclick="showcurrencyModal(this);"
                data-toggle="modal" data-target="#modal-currency">
            @ViewData["Create"]
        </button>
        <input type="hidden" id="hdnEmployee" />
    </div>

    <div class="table-responsive">
        <table id="tbl-smtp" class="table table-bordered table-sm rounded display">
            <thead class="thead-light">
                <tr>
                    <th class="sno-th">@ViewData["sno"]</th>
                    <th class="d-none">@ViewData["acode"]</th>
                    <th>@ViewData["arol"]</th>
                    <th>@ViewData["st"]</th>
                    <th class="d-none">Inst_No</th>
                    <th class="setup_2_actions">@ViewData["Act"]</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

</div>


<!-- [MODALS] -->
<div class="modal fade" id="modal-currency" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false"
     aria-labelledby="believerCreateLabel" aria-hidden="true">
    <div class="modal-dialog believerModal modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblage1">@ViewData["arol"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="col-12 p-0 mx-auto" action="AddCurrency" method="post">
                    <div class="row d-none">
                        <div class="form-group flex_form-group align-items-baseline col-md-11 col-lg-9 col-xl-6 ">
                            <input type="hidden" class="form-control hidden" id="txtSID">
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group flex_form-group align-items-baseline col-md-11 col-lg-9 col-xl-6">
                            <label for="gender" class="label-130">@ViewData["arol"]<span class="red">*</span></label>
                            <input type="text" class="form-control" id="txtname" placeholder="Role"
                                   onkeyup="valid(this)" onkeydown="return alphaFewsymrole(this)">
                        </div>
                        <div class="form-group flex_form-group align-items-baseline col-md-11 col-lg-9 col-xl-6">
                            <label for="inputEmail" class="label-130 status-label-75">
                                @ViewData["st"]<span class="red">*</span>
                        </label>
                        <div class="form-check form-check-inline">
                            <label class="form-check-label">
                                <input type="radio" class="form-check-input" name="gender" id="rbtrue"
                                       value="Active" checked>
                                Active
                            </label>
                            <label class="form-check-label ml-3">
                                <input type="radio" class="form-check-input" name="gender" id="rbfalse"
                                       value="InActive">
                                InActive
                            </label>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-success btn-sm btn-biz_logic"
                            id="btnSubmit">
                        @ViewData["BSav"]
                        </button>
                        <button type="button" id="btnClose" class="btn btn-secondary btn-sm"
                                data-dismiss="modal">
                            @ViewData["BClo"]
                            </button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>

    <script type="text/javascript">

    //function myFunction() {
    //    setTimeout(function () { history.go(0) }, 1000);
    //}
    var cid;
    var check;
    var jk = false;
    function valid(e) {

        jk = true;
    }
    function resetRegion() {
        var txtname = document.getElementById("txtname");
        var radioValue = jQuery("#rbtrue").prop("checked", true);
        txtname.value = '';
        jQuery("#txtname").prop('disabled', false);
        jQuery("#rbtrue").prop("disabled", false);
        jQuery("#rbfalse").prop("disabled", false);
    }
    function showcurrencyModal(e) {

        var txtname = document.getElementById('txtname');
        tblemployee = document.getElementById('tbl-smtp'),
            rows = tblemployee.rows,
            hdnEmployee = document.getElementById('hdnEmployee');

        if (e.value.indexOf('Edit') > -1) {
            jQuery("#btnSubmit").prop("show", true).html("@ViewData["Bup"]");
            for (var i = 0, row = null; i < rows.length; i++) {
                row = rows[i];
                if (row.cells[5].innerHTML.indexOf(e.id) > -1) {
                    txtSID.value = jQuery(e).data('sid');
                    txtname.value = row.cells[2].innerHTML;

                    if (txtname.value == "Admin") {
                        jQuery("#txtname").prop('disabled', true);
                        jQuery("#rbtrue").prop("disabled", true);
                        jQuery("#rbfalse").prop("disabled", true);
                    }
                    else {
                        jQuery("#txtname").prop('disabled', false);
                        jQuery("#rbtrue").prop("disabled", false);
                        jQuery("#rbfalse").prop("disabled", false);
                    }
                    var flag = row.cells[3].innerHTML;
                    if (flag == 'Active') {
                        jQuery("#rbtrue").prop("checked", true);

                        jQuery("#rbfalse").prop("checked", false);
                    }
                    else if (flag == 'InActive') {
                        jQuery("#rbtrue").prop("checked", false);

                        jQuery("rbfalse").prop("disabled", false);
                    } else {
                        jQuery("#rbtrue").prop("checked", false);

                        jQuery("rbfalse").prop("disabled", false);
                    }
                }
            }

            hdnEmployee.value = 'U';
        }
        else if (e.value.indexOf('Add') > -1) {
            resetRegion();
            jQuery("#loader").css("display", "none");
            jQuery("#btnSubmit").show();
            jQuery("#btnSubmit").prop("show", true).html("@ViewData["Bsv"]");
            jQuery("#tbl-smtp1").empty();
            hdnEmployee.value = 'C';
        }

    }

    function getCurrencyValues() {
        // jQuery.noConflict();
        var txtname = document.getElementById("txtname");
        rblGender = jQuery("input[name='gender']:checked");
        txtSID = document.getElementById('txtSID'),
            tblemployee = document.getElementById('tbl-smtp'),
            rows = tblemployee.rows,
            hdnEmployee = document.getElementById('hdnEmployee');

        if (txtSID.value == '') {
            txtSID.value = '0';
        }

        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();
        var check = true;
        var dt = '';
        var dn = '';
        var doublecheck = false;
        var doublechecked = false;
        if (hdnEmployee.value == "C") {
            txtSID.value = '0';
            jk = false;
            var tblemployee = document.getElementById('tbl-smtp'),
                rows = tblemployee.rows;
            var data = {
                name: txtname.value.trim(),
                act: rblGender.val(),
                sno: txtSID.value,
                dummy: check,

            }
            return data;

        }
        else if (hdnEmployee.value == "U") {
            var table = jQuery('#tbl-smtp').DataTable();
            var row = table.rows({ page: 'all' }).nodes();
            for (var i = 0; i < row.length; i++) {
                var to = row[i].cells[2].innerHTML.toLowerCase();
                var too = txtname.value.toLowerCase().trim();

                if ((to == too) && jk == true) {
                    check = false;
                }
                else { }
            }
            if (check == true) {
                var data = {
                    name: txtname.value.trim(),
                    act: rblGender.val(),
                    sno: txtSID.value,
                    dummy: check,

                }
            }
            else {
                var data =
                {
                    name: txtname.value.trim(),
                    act: rblGender.val(),
                    sno: txtSID.value,
                    dummy: check,
                }
            }

            return data;
        }

    }

    function getcurrencyID(glob) {
        // jQuery.noConflict();
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();

        if (hdnEmployee.value == "D") {

            var data = {

                sno: glob,

            }

            return data;
        }
    }

    function validateEmployeecur() {

        var txtname = document.getElementById("txtname");
        result = '';
        if (txtname.value.trim().length == 0) {
            result += 'Description is required.<br/>';
        } else {
            var d = alphaFewsym(txtname.value.trim());
            if (d != false) {
                result += d;
            }
        }
        return result;
    }
    function deletecurGrid() {
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected');

        table.row(selectedRow).remove().draw();
    }

    </script>
