
@{
    ViewBag.Title = "Updatepwd";
    Layout = "~/Views/Shared/_Invoice_layout.cshtml";
}


<script type="text/javascript">

    $(document).ready(function () {
        bindqDetails();

        $("#btnSubmit").click(function () {
            addReGION();
        })

        $("#btnDelete").click(function () {
            delRegion();
        });
    });
</script>

<script type="text/javascript">
    var pwd;
    function bindqDetails() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetqDetails", "Updatepwd")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {

                $("#ddlq").append($("<option></option>").val(0).html('Select'));

                if (data != null) {

                    $.each(data, function (key, text) {

                        $("#ddlq").append($("<option></option>").val(text.SNO).html(text.Q_Name));

                    });

                }
            }
        })
    }

     function addReGION() {

         var message = validateEmployeere();

        if(message.length > 0) {
            notifyMessage(message, 'danger');
        }
        else {
            var params = JSON.stringify(getRegionValues());

            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("Addpwd", "Updatepwd")',
                data: params,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {

                    if (data != null) {
                        if (data == "exist") {
                            message = ' Current password and New password should not be same.';
                            type = 'danger';

                        } else {
                            message = ' Updated Successfully.';
                            type = 'success';
                            resetRegion();
                            window.location.href = '@Url.Action("Loginnew", "Loginnew")';
                        }

                    }
                    else {
                        message =' Not Updated  Successfully.';
                        type = 'danger';
                    }

                    notifyMessage(message, type);

                }
            })
        }
    }
</script>


<div class="page-body">
        <div class="container-fluid">
            <div class="page-title">
              <div class="row">
                <div class="col-sm-6">
                  <h3>Update Password</h3>
                </div>
                <div class="col-sm-6">
                  <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Setup", "Setup")"> 
                       <i data-feather="home"></i></a></li>
                    <li class="breadcrumb-item">Home</li>
                    <li class="breadcrumb-item active">Update Password</li> 
                    @* <a href="javascript:void(0);" class="btn btn-sm btn-primary" title="">Create New</a> 
            <button type="button" id="btnAdd" value="Add" data-sid="0"
                    class="btn btn-primary d-inline-block md-trigger ml-4"
                    onclick="showBranchModal(this);" data-bs-toggle="modal" data-bs-target="#modal-currency">
                <i data-feather="plus-circle" class="mr-2"></i>
                Add Branch
            </button>
            <input type="hidden" id="hdnEmployee" />*@

                  </ol>
                </div>
              </div>
            </div>
          </div>
        <!-- Container-fluid starts-->
<div class="container-fluid general-widget">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">


<div class="card-body">
    <form class="col-12 p-0 mx-auto" action="AddRegion" method="post">
        <div class="row">

            <div class="form-group flex_form-group align-items-baseline col-md-6">
                <label for="gender" class="f-label_align">@ViewData["np"]<span class="red">*</span></label>
                <input type="password" class="form-control" id="txtpwd" placeholder="New password" onchange="checkconfirmpwd(this)" onfocusout="validatePassword1(this);" />
                <input type="hidden" class="form-control  hidden" id="txtSID">
            </div>
            <div class="form-group flex_form-group align-items-baseline col-md-6">
                <label for="gender" class="f-label_align">@ViewData["ccp"]<span class="red">*</span></label>
                <input type="password" class="form-control" id="txtcpwd" onchange="checkconfirmpwd(this)" onfocusout="validatePassword1(this);" placeholder="Confirm password" />

            </div>
            <div class="form-group flex_form-group align-items-baseline col-md-6">
                <label id="lblError"></label>
            </div>
        </div>

        <div class="row">
            <div class="form-group flex_form-group align-items-baseline col-md-6">
                <label for="gender" class="f-label_align"> @ViewData["Sques"]<span class="red">*</span> </label>
                <select id="ddlq" class="form-control" name="ddlq"></select>
            </div>
            <div class="form-group flex_form-group align-items-baseline col-md-6">
                <label for="gender" class="f-label_align"> @ViewData["Sansw"]<span class="red">*</span> </label>
                <input type="text" class="form-control" id="txtaws" placeholder="Answers" />
            </div>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-info btn-sm" data-bs-dismiss="modal">@ViewData["Close"]</button>
            <button type="button" class="btn btn-outline-primary btn-sm btn-biz_logic" id="btnSubmit">@ViewData["Save"]</button>
        </div>
    </form>
</div>
        </div>
         </div>

        </div>
 <!-- Container-fluid Ends-->
</div>


<script type="text/javascript">
    var error,pw;
    function resetRegion() {
        var txtpwd = document.getElementById('txtpwd');
        var txtcpwd = document.getElementById("txtcpwd");
        var ddlq = document.getElementById("ddlq");
        var txtans = document.getElementById("txtaws");

        txtpwd.value = '',
            txtcpwd.value = '';
        txtans.value = '';
        ddlq.selectedIndex = 0;
    }
    function checkconfirmpwd() {
        var txtpwd = document.getElementById('txtpwd');
        var txtcpwd = document.getElementById("txtcpwd");
        if (txtpwd.value != txtcpwd.value && txtcpwd.value != '') {
            pw = false;
            lblError.innerHTML = "Passwords does not match.";
            error = "Passwords does not match.";
            jQuery('#lblError').css('color', 'Red');
        }
        else {
            lblError.innerHTML = "";
            //jQuery('#lblError').css('color', 'Green');
            pw = true;
        }
    }
    function getRegionValues() {
       // jQuery.noConflict();
        var txtpwd = document.getElementById('txtpwd');
        //var txtcpwd = document.getElementById("txtcpwd");
        var ddlq = document.getElementById("ddlq");
        var txtans = document.getElementById("txtaws");
        var ddlvalue = ddlq.options[ddlq.selectedIndex].value;
        var ddltext = ddlq.options[ddlq.selectedIndex].text;

        var a = [];
        var b = location.search && location.search.substr(1).replace(/\+/gi, " ").split("&");
        for (var i in b) {
            var s = b[i].split("=");
            a[i] = b[unescape(s[0])] = unescape(s[1]);
        }
        if (pwd == true && pw == true) {
            var data = {
                pwd: txtpwd.value,
                qustSno: ddlvalue,
                qust: ddltext,
                ansr: txtans.value,
                type: a[0].replace(" ", ""),
                Instid: a[1].replace(" ", ""),
                Usersno: a[2].replace(" ", ""),
            }
            return data;
        } else {
            type = 'danger';
            message = error;
            notifyMessage(message, type);
        }
    }


    function validateEmployeere() {

        var txtpwd = document.getElementById('txtpwd');
        var txtcpwd = document.getElementById("txtcpwd");
        var ddlq = document.getElementById("ddlq");
        var txtans = document.getElementById("txtaws");
        result = '';

        if (txtpwd.value.trim().length == 0) {
            result += 'Password is Required.<br/>';
        }
        if (txtcpwd.value.trim().length == 0) {
            result += 'confirm Password is Required.<br/>';
        }
        if (ddlq.value == 0) {
            result += 'Question is Required.<br/>';
        }
        if (txtans.value.trim().length == 0) {
            result += 'Answer is Required.<br/>';

        }
        else {
            var d = alpha(txtans.value.trim());
            if (d != false) {
                result += d;
            }
        }
        return result;
    }


</script>


